{"version":3,"sources":["Content/login/login.module.css","utils/validators/validatorLogin.js","hoc/withProfileRedirect.js","Content/login/login.jsx"],"names":["module","exports","length","mapStateToPropsForRedirect","state","isAuth","auth","id","requiredField","value","maxLengthCreator","Login","onSubmit","formData","props","setLogin","email","password","rememberMe","className","style","login","this","isFetching","LoginReduxForm","React","Component","maxLengthEmail","maxLengthPassword","minLengthPassword","renderField","input","placeholder","type","meta","touched","error","warning","errorMessage","inputText","reduxForm","form","handleSubmit","Field","name","validate","component","checkboxAndButton","compose","connect","RedirectComponent","to"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,UAAY,yBAAyB,MAAQ,qBAAqB,kBAAoB,iCAAiC,aAAe,8B,4CCSrJC,E,4HCN5BC,EAA6B,SAAAC,GAAK,MAAK,CACzCC,OAAQD,EAAME,KAAKD,OACnBE,GAAIH,EAAME,KAAKC,K,QDNJC,EAAgB,SAAAC,GAC3B,IAAIA,EACJ,MAAO,qBAGIC,EAAmB,SAAAR,GAAM,OAAI,SAAAO,GACxC,GAAIA,EAAMP,OAASA,EAAQ,MAAM,iBAAN,OAAwBA,EAAxB,cEQvBS,E,2MACJC,SAAW,SAAAC,GACT,OAAO,EAAKC,MAAMC,SAChBF,EAASG,MACTH,EAASI,SACTJ,EAASK,a,wEAIX,OACE,yBAAKC,UAAWC,IAAMC,OACpB,qCACEC,KAAKR,MAAMS,WAGX,kBAAC,IAAD,MAFA,kBAACC,EAAD,CAAgBZ,SAAUU,KAAKV,gB,GAbrBa,IAAMC,WAsBpBC,EAAiBjB,EAAiB,IAClCkB,EAAoBlB,EAAiB,IACrCmB,GF5B0B3B,EE4BW,EF5BD,SAAAO,GACxC,GAAIA,EAAMP,OAASA,EAAQ,MAAM,iBAAN,OAAwBA,EAAxB,cE6BvB4B,EAAc,SAAC,GAAD,IAClBC,EADkB,EAClBA,MACAC,EAFkB,EAElBA,YACAC,EAHkB,EAGlBA,KAHkB,IAIlBC,KAAQC,EAJU,EAIVA,QAASC,EAJC,EAIDA,MAJC,EAIMC,QAJN,OAMlB,6BACGF,GAAWC,GAAS,yBAAKjB,UAAWC,IAAMkB,cAAeF,GAC1D,yCACEH,KAAMA,GACFF,EAFN,CAGEC,YAAaA,EACbb,UAAWC,IAAMmB,UAAY,KAAOJ,GAAWC,GAAShB,IAAMgB,YAmC9DZ,EAAiBgB,YAAU,CAC/BC,KAAM,SADeD,EA9BL,SAAC,GAA6B,IAA3BE,EAA0B,EAA1BA,aAAcN,EAAY,EAAZA,MACjC,OACE,0BAAMxB,SAAU8B,GACd,6BACE,wCACA,kBAACC,EAAA,EAAD,CACEV,KAAK,OACLW,KAAM,QACNC,SAAU,CAACrC,EAAemB,GAC1BmB,UAAWhB,KAGf,6BACE,2CACA,kBAACa,EAAA,EAAD,CACEV,KAAK,WACLW,KAAM,WACNC,SAAU,CAACrC,EAAeoB,EAAmBC,GAC7CiB,UAAWhB,KAGf,yBAAKX,UAAWC,IAAM2B,mBACpB,kBAACJ,EAAA,EAAD,CAAOV,KAAM,WAAYa,UAAW,QAASF,KAAM,eAAiB,IADtE,eAEc,yCACXR,GAAS,6BAAMA,QAeTY,sBACbC,aANsB,SAAA7C,GAAK,MAAK,CAChCC,OAAQD,EAAME,KAAKD,OACnBkB,WAAYnB,EAAME,KAAKiB,cAIE,CAAER,gBDxFM,SAAAW,GAAc,IACzCwB,EADwC,iLAG1C,OAAI5B,KAAKR,MAAMT,OACN,kBAAC,IAAD,CAAU8C,GAAE,mBAAc7B,KAAKR,MAAMP,MACvC,kBAACmB,EAAcJ,KAAKR,WALe,GACdW,IAAMC,WAWtC,OAJiCuB,YAAQ9C,EAAR8C,CAC/BC,KC8EWF,CAGbrC","file":"static/js/7.204eea2e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"login_login__3ZhkP\",\"inputText\":\"login_inputText__jFq7q\",\"error\":\"login_error__1MlwI\",\"checkboxAndButton\":\"login_checkboxAndButton__QxPGW\",\"errorMessage\":\"login_errorMessage__15xoc\"};","export const requiredField = value => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = length => value => {\r\n  if (value.length > length) return `max length is ${length} simbols`;\r\n  return undefined;\r\n};\r\n\r\nexport const minLengthCreator = length => value => {\r\n  if (value.length < length) return `min length is ${length} simbols`;\r\n  return undefined;\r\n};\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = state => ({\r\n  isAuth: state.auth.isAuth,\r\n  id: state.auth.id\r\n});\r\n\r\nexport const withProfileRedirect = Component => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (this.props.isAuth)\r\n        return <Redirect to={`/profile/${this.props.id}`} />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n  let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedRedirectComponent;\r\n};\r\n","import React from \"react\";\r\nimport style from \"./login.module.css\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { setLogin } from \"../../redux/authReducer\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { withProfileRedirect } from \"../../hoc/withProfileRedirect\";\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport {\r\n  requiredField,\r\n  maxLengthCreator,\r\n  minLengthCreator\r\n} from \"../../utils/validators/validatorLogin\";\r\n\r\nclass Login extends React.Component {\r\n  onSubmit = formData => {\r\n    return this.props.setLogin(\r\n      formData.email,\r\n      formData.password,\r\n      formData.rememberMe\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div className={style.login}>\r\n        <h1>Login</h1>\r\n        {!this.props.isFetching ? (\r\n          <LoginReduxForm onSubmit={this.onSubmit} />\r\n        ) : (\r\n          <Preloader />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst maxLengthEmail = maxLengthCreator(40);\r\nconst maxLengthPassword = maxLengthCreator(16);\r\nconst minLengthPassword = minLengthCreator(4);\r\n\r\nconst renderField = ({\r\n  input,\r\n  placeholder,\r\n  type,\r\n  meta: { touched, error, warning }\r\n}) => (\r\n  <div>\r\n    {touched && error && <div className={style.errorMessage}>{error}</div>}\r\n    <input\r\n      type={type}\r\n      {...input}\r\n      placeholder={placeholder}\r\n      className={style.inputText + \" \" + (touched && error && style.error)}\r\n    />\r\n  </div>\r\n);\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <span>Email:</span>\r\n        <Field\r\n          type=\"text\"\r\n          name={\"email\"}\r\n          validate={[requiredField, maxLengthEmail]}\r\n          component={renderField}\r\n        />\r\n      </div>\r\n      <div>\r\n        <span>Password:</span>\r\n        <Field\r\n          type=\"password\"\r\n          name={\"password\"}\r\n          validate={[requiredField, maxLengthPassword, minLengthPassword]}\r\n          component={renderField}\r\n        />\r\n      </div>\r\n      <div className={style.checkboxAndButton}>\r\n        <Field type={\"checkbox\"} component={\"input\"} name={\"rememberMe\"} />{\" \"}\r\n        remember me <button>Login</button>\r\n        {error && <div>{error}</div>}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n  form: \"login\"\r\n})(LoginForm);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: state.auth.isAuth,\r\n  isFetching: state.auth.isFetching\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { setLogin }),\r\n  withProfileRedirect\r\n)(Login);\r\n"],"sourceRoot":""}